{"version":3,"sources":["components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section.js","components/App.js","index.js","components/App.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","Noitfication","massage","porpTypes","massega","Proptypes","string","isRequired","Section","title","children","App","useState","setGood","setNeutral","setBad","className","AppStyle","feedbackOptions","feedbackOptionItem","type","onClick","s","Notification","Math","round","ReactDOM","render","StrictMode","document","querySelector","module","exports"],"mappings":"kNA2BeA,MAzBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qCACE,+BACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,QAGX,gCACE,wCAAWC,KACX,oDAAuBC,EAAqB,c,gBCXpD,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,IAGbD,EAAaE,UAAY,CACvBC,QAASC,IAAUC,OAAOC,YAGbN,QCOAO,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCAQ,SAASC,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBhB,EADqB,KACfiB,EADe,OAEED,mBAAS,GAFX,mBAErBf,EAFqB,KAEZiB,EAFY,OAGNF,mBAAS,GAHH,mBAGrBd,EAHqB,KAGhBiB,EAHgB,KActBhB,EAAQH,EAAOC,EAAUC,EAO/B,OACE,qCACE,cAAC,EAAD,CAASW,MAAM,wBAAf,SACE,qBAAIO,UAAWC,IAASC,gBAAxB,UACE,oBAAIF,UAAWC,IAASE,mBAAxB,SACE,wBAAQC,KAAK,SAA0BC,QArB9B,WACjBR,GAAQ,SAAAS,GAAC,OAAIA,EAAI,MAoBT,iBAA0B,gBAI5B,oBAAIN,UAAWC,IAASE,mBAAxB,SACE,wBAAQC,KAAK,SAA6BC,QAvB9B,WACpBP,GAAW,SAAAQ,GAAC,OAAIA,EAAI,MAsBZ,oBAA0B,mBAI5B,oBAAIN,UAAWC,IAASE,mBAAxB,SACE,wBAAQC,KAAK,SAA6BC,QAzBlC,WAChBN,GAAO,SAAAO,GAAC,OAAIA,EAAI,MAwBR,gBAA0B,wBAOrB,IAAVvB,EACC,cAACwB,EAAD,CAAcrB,QAAS,sBAEvB,cAAC,EAAD,CAASO,MAAM,aAAf,SACE,cAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAnCMwB,KAAKC,MAAO7B,EAAOG,EAAS,Y,MCnB9C2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjB,EAAD,MAEFkB,SAASC,cAAc,W,kBCRzBC,EAAOC,QAAU,CAAC,gBAAkB,6BAA6B,mBAAqB,gCAAgC,OAAS,uB","file":"static/js/main.5c9b9684.chunk.js","sourcesContent":["import Proptypes from 'prop-types';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <ul>\n        <li>Good:{good}</li>\n        <li>Neutral:{neutral}</li>\n        <li>Bad:{bad}</li>\n      </ul>\n\n      <div>\n        <p>Total: {total}</p>\n        <p>Positive feedback: {positivePercentage + '%'}</p>\n      </div>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: Proptypes.number.isRequired,\n  neutral: Proptypes.number.isRequired,\n  bad: Proptypes.number.isRequired,\n  total: Proptypes.number.isRequired,\n  positivePercentage: Proptypes.number.isRequired,\n};\n\nexport default Statistics;\n","import Proptypes from 'prop-types';\n\nfunction Noitfication({ massage }) {\n  return <p>{massage}</p>;\n}\n\nNoitfication.porpTypes = {\n  massega: Proptypes.string.isRequired,\n};\n\nexport default Noitfication;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: Proptypes.string.isRequired,\n  children: Proptypes.node.isRequired,\n};\n\nexport default Section;\n","import { useState } from 'react';\nimport Statistics from './Statistics/Statistics';\nimport Notification from './Notification/Notification';\nimport Section from './Section';\n\nimport AppStyle from './App.module.css';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const upDateGood = () => {\n    setGood(s => s + 1);\n  };\n  const upDateNeutral = () => {\n    setNeutral(s => s + 1);\n  };\n  const upDateBad = () => {\n    setBad(s => s + 1);\n  };\n  const total = good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = () => {\n    const ratio = Math.round((good / total) * 100);\n    return ratio;\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <ul className={AppStyle.feedbackOptions}>\n          <li className={AppStyle.feedbackOptionItem}>\n            <button type=\"button\" key=\"ButtonGood\" onClick={upDateGood}>\n              Good\n            </button>\n          </li>\n          <li className={AppStyle.feedbackOptionItem}>\n            <button type=\"button\" key=\"ButtonNeutral\" onClick={upDateNeutral}>\n              Neutral\n            </button>\n          </li>\n          <li className={AppStyle.feedbackOptionItem}>\n            <button type=\"button\" key=\"ButtonNeutral\" onClick={upDateBad}>\n              Bad\n            </button>\n          </li>\n        </ul>\n      </Section>\n\n      {total === 0 ? (\n        <Notification massage={'No feedback given'} />\n      ) : (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackOptions\":\"App_feedbackOptions__2Gecz\",\"feedbackOptionItem\":\"App_feedbackOptionItem__2ZOUf\",\"button\":\"App_button__3L0lF\"};"],"sourceRoot":""}